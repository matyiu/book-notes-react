{"version":3,"sources":["components/Navbar.js","app/localStorage.js","redux/tagsSlice.js","redux/notesSlice.js","components/notes/NotesList.js","components/inputs/ButtonDialog.js","components/inputs/Select.js","components/inputs/SearchSelect.js","components/inputs/MultiSelect.js","components/inputs/FilterNotes.js","components/notes/AddNoteForm.js","components/Toolbar.js","pages/Home.js","components/TinyMCE.js","components/buttons/ExportToHTML.js","variables/exportHtmlStyles.js","components/notes/SingleNote.js","pages/Book.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["Navbar","onSearch","bg","expand","Container","Row","style","width","Col","xs","Brand","href","Toggle","aria-controls","Collapse","id","className","Form","inline","InputGroup","FormControl","type","placeholder","onChange","Append","Button","variant","loadData","name","stringData","localStorage","getItem","JSON","parse","saveData","data","jsonData","stringify","setItem","initialState","author","category","tagsSlice","createSlice","reducers","categoryAdded","reducer","state","action","push","payload","prepare","content","value","nanoid","authorAdded","actions","selectAllAuthors","tags","selectAllCategories","notesSlice","noteAdded","concat","created","Date","notes","noteUpdated","changes","existingNote","find","note","existingNoteIndex","findIndex","noteDeleted","filter","NotesList","props","dispatch","useDispatch","authors","useSelector","categories","renderedNotes","map","to","onClick","e","preventDefault","stopPropagation","length","Alert","ButtonDialog","btnText","containerClassName","useState","open","setOpen","container","useRef","useEffect","handleClickOutside","current","contains","target","document","addEventListener","removeEventListener","data-open","ref","children","Select","singleValue","options","read","onCreate","inputValue","onClose","create","onKeyDown","defaultOptions","onRemoveTag","customSelectRef","focus","setFocus","handleClickOpen","prevOpen","renderedOptions","option","optionValue","handleOptionChange","createOption","valueOptions","selectedValue","undefined","multipleValue","Array","isArray","renderedValuePill","readOnly","onFocus","SearchSelect","createHandler","restProps","getCurrentOptionContent","searchText","setSearchText","filteredOptions","setFilteredOptions","setCreate","filterOptions","search","startsWith","MultiSelect","input","parent","closest","spanText","createElement","textContent","appendChild","textWidth","offsetWidth","Math","max","remove","FilterNotes","onOrder","onFilter","orderBy","setOrderBy","orderType","setOrderType","selectedAuthors","setSelectedAuthors","selectedCategories","setSelectedCategories","String","fromCharCode","selectedState","setSelectedState","removeNonBreakingSpace","str","replace","Group","controlId","Label","order","AddNoteForm","show","setShow","callbackClose","setName","setAuthor","setCategory","setState","canSave","trim","handleClose","Modal","size","onHide","onExited","dialogClassName","Header","Title","Body","Control","Footer","Toolbar","openForm","setOpenForm","Home","notesDefault","status","setNotes","currentFilter","setCurrentFilter","firstRender","unorderedArr","sort","a","b","aName","toLowerCase","bName","findItem","arr","item","findState","noteState","handleFilter","Object","is","filteredNotes","TinyMceWrapper","textareaName","init","height","menubar","plugins","toolbar","content_style","ExportToHTML","headTag","bodyTag","blob","Blob","formatedName","saveAs","SingleNote","bookId","useParams","history","useHistory","noteId","selectNoteById","class","onEditorChange","Book","App","exact","path","configureStore","notesReducer","tagsReducer","Boolean","window","location","hostname","match","store","subscribe","getState","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.68b4eb67.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Navbar as B4Navbar, Form, FormControl, Button, Container, Row, Col, InputGroup } from \"react-bootstrap\";\r\n\r\nexport const Navbar = ({ onSearch }) => {\r\n    return (\r\n        <B4Navbar bg=\"light\" expand=\"lg\">\r\n            <Container>\r\n                <Row style={{ width: \"100%\" }}>\r\n                    <Col xs=\"4\">\r\n                        <B4Navbar.Brand href=\"/\">BooNote</B4Navbar.Brand>\r\n                    </Col>\r\n                    <Col xs=\"8\">\r\n                        <B4Navbar.Toggle aria-controls=\"navbar-nav\" />\r\n                        <B4Navbar.Collapse id=\"navbar-nav\" className=\"justify-content-end\">\r\n                            <Form inline>\r\n                                <InputGroup className=\"search-box\">\r\n                                    <FormControl type=\"text\" placeholder=\"Search\" onChange={onSearch} />\r\n                                    <InputGroup.Append>\r\n                                        <Button variant=\"secondary\">\r\n                                            <i className=\"fas fa-search\"></i>\r\n                                        </Button>\r\n                                    </InputGroup.Append>\r\n                                </InputGroup>\r\n                            </Form>\r\n                        </B4Navbar.Collapse>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </B4Navbar>\r\n    );\r\n};","export const loadData = (name) => {\n    const stringData = localStorage.getItem(name);\n\n    return stringData ? JSON.parse(stringData) : null;\n}\n\nexport const saveData = (name, data) => {\n    const jsonData = JSON.stringify(data);\n    localStorage.setItem(name, jsonData);\n}","import { createSlice, nanoid } from \"@reduxjs/toolkit\";\nimport { loadData } from \"../app/localStorage\";\n\nconst initialState = loadData('boonote.tags') || {author: [], category: []}\n\nconst tagsSlice = createSlice({\n    name: 'tags',\n    initialState,\n    reducers: {\n        categoryAdded: {\n            reducer(state, action) {\n                state.category.push(action.payload);\n            },\n            prepare(content) {\n                return {\n                    payload: {\n                        value: nanoid(),\n                        content\n                    }\n                };\n            }\n        },\n        authorAdded: {\n            reducer(state, action) {\n                state.author.push(action.payload);\n            },\n            prepare(content) {\n                return {\n                    payload: {\n                        value: nanoid(),\n                        content\n                    }\n                };\n            }\n        }\n    }\n});\n\n\nexport default tagsSlice.reducer;\n\nexport const { \n    categoryAdded, \n    authorAdded\n} = tagsSlice.actions;\n\n\n// Author selectors\nexport const selectAllAuthors = (state) => state.tags.author;\n\nexport const selectAuthorByValue = (state, value) => \n    state.tags.author.find(item => item.value === value);\n\n// Category selectors\nexport const selectAllCategories = (state) => state.tags.category;\n\nexport const selectCategoryByValue = (state, value) => \n    state.tags.category.find(item => item.value === value);","import { createSlice, nanoid } from \"@reduxjs/toolkit\";\nimport { loadData } from \"../app/localStorage\";\n\nconst initialState = loadData('boonote.notes') || [];\n\nconst notesSlice = createSlice({\n    name: 'notes',\n    initialState,\n    reducers: {\n        noteAdded: {\n            reducer(state, action) {\n                state = state.concat([action.payload]);\n                return state;\n            },\n            prepare(name, author, category, state) {\n                return {\n                    payload: {\n                        id: nanoid(),\n                        created: new Date(),\n                        notes: '',\n                        name,\n                        author,\n                        category,\n                        state,\n                    }\n                };\n            }\n        },\n        noteUpdated(state, action) {\n            const { id, changes } = action.payload;\n            const existingNote = state.find(note => note.id === id);\n            const existingNoteIndex = state.findIndex(note => note === existingNote);\n            if (existingNote) {\n                state[existingNoteIndex] = {\n                    ...existingNote,\n                    ...changes\n                };\n            }\n        },\n        noteDeleted(state, action) {\n            const id = action.payload;\n            state = state.filter(note => note.id !== id);\n            return state;\n        }\n    }\n});\n\n\nexport default notesSlice.reducer;\n\nexport const { noteAdded, noteUpdated, noteDeleted } = notesSlice.actions;\n\nexport const selectNoteById = (state, noteId) => \n    state.notes.find(note => note.id === noteId)","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Alert, Button, Col, Container, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { selectAllAuthors, selectAllCategories } from '../../redux/tagsSlice';\r\nimport { noteDeleted } from '../../redux/notesSlice';\r\n\r\nexport const NotesList = (props) => {\r\n    const { notes } = props;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // Redux Selectors\r\n    const authors = useSelector(selectAllAuthors);\r\n    const categories = useSelector(selectAllCategories);\r\n\r\n    const renderedNotes = notes.map(\r\n        note => {\r\n            const author = authors.find(author => author.value === note.author);\r\n            const category = categories.find(category => category.value === note.category);\r\n\r\n            const handleRemoveClick = e => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                dispatch(noteDeleted(note.id));\r\n            }\r\n\r\n            return (\r\n                <Col xs=\"12\" key={note.id}>\r\n                    <Link to={`/book/${note.id}`}>\r\n                        <article className=\"note\">\r\n                            <h2>{note.name}</h2>\r\n                            <div className=\"note-metadata\">\r\n                                <div className=\"tag\">{note.state}</div>\r\n                                <div className=\"tag\">{category.content}</div>\r\n                                <div className=\"tag\">{author.content}</div>\r\n                            </div>\r\n                            <Button onClick={handleRemoveClick} className=\"note-action\" variant=\"link\">\r\n                                <i className=\"fas fa-trash\"></i>\r\n                            </Button>\r\n                        </article>\r\n                    </Link>\r\n                </Col>\r\n            );\r\n        }\r\n    );\r\n\r\n    return (\r\n        <div className=\"notesList\">\r\n            <Container>\r\n                <Row>\r\n                    {(renderedNotes.length > 0) ? \r\n                        renderedNotes : \r\n                        (\r\n                            <Col xs=\"12\">\r\n                                <Alert variant=\"info\">No notes has been found</Alert>\r\n                            </Col>\r\n                        )\r\n                    }\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n};","import React, { useRef, useState, useEffect } from 'react';\n\nexport const ButtonDialog = (props) => {\n    const { className, btnText, containerClassName } = props;\n\n    // States\n    const [ open, setOpen ] = useState(false);\n\n    // Refs\n    const container = useRef(null);\n\n    // Event Handlers\n    const handleOpenDialog = () => setOpen(!open);\n\n    // Click outside handler\n    useEffect(() => {\n        const handleClickOutside = (e) => {\n            if (container.current && !container.current.contains(e.target)) {\n                setOpen(false);\n            }\n        }\n\n        document.addEventListener('mousedown', handleClickOutside);\n\n        return () => document.removeEventListener('mousedown', handleClickOutside);\n    });\n\n    return (\n        <div className={\"button-dialog-container \" + containerClassName} data-open={open} ref={container}>\n            <button className={className} onClick={handleOpenDialog}>{btnText}</button>\n            <div className=\"button-dialog-wrapper\">\n                <div className=\"button-dialog\">\n                    {props.children}\n                </div>\n            </div>\n        </div>\n    );\n}","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nexport const Select = (props) => {\r\n    const { \r\n        options, \r\n        value, \r\n        onChange, \r\n        read,\r\n        onCreate,\r\n        onSearch,\r\n        inputValue,\r\n        onClose,\r\n        create,\r\n        onKeyDown,\r\n        defaultOptions,\r\n        onRemoveTag\r\n    } = props; // Props\r\n\r\n    // Refs\r\n    const customSelectRef = useRef(null);\r\n\r\n    // States\r\n    const [ open, setOpen ] = useState(false);\r\n    const [ focus, setFocus ] = useState(false);\r\n\r\n    // Event handlers\r\n    const handleClickOpen = () => setOpen(prevOpen => !prevOpen)\r\n\r\n    const handleOptionChange = (e, option) => {\r\n        const optionValue = option.value || option.content;\r\n        handleClickOpen();\r\n        onChange({target: {value: optionValue} });\r\n    }\r\n\r\n    const handleInputFocus = () => setFocus(true);\r\n\r\n    // Rendered values\r\n    const renderedOptions = options.map(option =>\r\n        <div \r\n            onClick={(e) => handleOptionChange(e, option)} \r\n            className=\"select-option\"\r\n        >\r\n            {option.content}\r\n        </div>\r\n    )\r\n    const createOption = (\r\n        <div \r\n            className=\"select-option select-create\"\r\n            onClick={onCreate}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n            Create \"{inputValue}\"\r\n        </div>\r\n    );\r\n\r\n    const valueOptions = defaultOptions || options;\r\n\r\n    let singleValue;\r\n    if (typeof value === 'string') {\r\n        const selectedValue = valueOptions.find(option => (option.value || option.content) === value);\r\n\r\n        singleValue = selectedValue !== undefined ? selectedValue.content : null;\r\n    }\r\n\r\n    const multipleValue = Array.isArray(value) && \r\n        value.map(id => valueOptions.find(option => (option.value || option.content) === id));\r\n\r\n    const renderedValuePill = multipleValue && multipleValue.map(option => (\r\n        <li className=\"pill\" onClick={(e) => {\r\n            onRemoveTag(e, option.value);\r\n        }}>{option.content}</li>\r\n    ));\r\n\r\n    // Click outside select handler\r\n    useEffect(() => {\r\n        const handleClickOutside = (e) => {\r\n            if (customSelectRef.current && !customSelectRef.current.contains(e.target)) {\r\n                setOpen(false);\r\n                setFocus(false);\r\n                onClose && onClose();\r\n            }\r\n        }\r\n\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n\r\n        return () => document.removeEventListener('mousedown', handleClickOutside);\r\n    });\r\n\r\n    return (\r\n        <div className=\"select\" data-open={(read === false) ? focus : open} ref={customSelectRef}>\r\n            <div className=\"select-input\" onClick={handleClickOpen}>\r\n                {renderedValuePill && (\r\n                    <ul className=\"select-input-list\">\r\n                        {renderedValuePill}\r\n                    </ul>\r\n                )}\r\n                <input type=\"text\" \r\n                    value={(typeof inputValue !== 'undefined') ?\r\n                        inputValue : singleValue} \r\n                    readOnly={(typeof read === 'undefined') ? true : read } \r\n                    onChange={onSearch}\r\n                    onKeyDown={onKeyDown}\r\n                    onFocus={handleInputFocus}\r\n                />\r\n                <i className=\"fas fa-angle-down\"></i>\r\n            </div>\r\n            <div className=\"select-options-wrapper\">\r\n                <div className=\"select-options\">\r\n                    {(create && inputValue.length > 0) && createOption}\r\n                    {renderedOptions}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\nimport { Select } from './Select';\n\nexport const SearchSelect = props => {\n    const { options, value, createHandler, ...restProps } = props;\n\n    // Helper functions\n    const getCurrentOptionContent = () => {\n        if (typeof value === 'string') {\n            const option = options.find(option => (option.value || option.content) === value)\n            \n            return option.content;\n        }\n\n        return '';\n    };\n    \n    // State\n    const optionValue = getCurrentOptionContent();\n    const [ searchText, setSearchText ] = useState(optionValue);\n    const [ filteredOptions, setFilteredOptions ] = useState(options);\n    const [ create, setCreate ] = useState(false);\n\n    const filterOptions = search => {\n        return options.filter(option =>\n            option.content.startsWith(search)\n        );\n    }\n\n    const handleSearchChange = (e) => {\n        const search = e.target.value;\n        setFilteredOptions(filterOptions(search));\n        setSearchText(search);\n        setCreate(true);\n    }\n\n    const handleClose = () => {\n        setSearchText(getCurrentOptionContent());\n        setFilteredOptions(filterOptions(''));\n        setCreate(false);\n    }\n\n    const handleCreateOption = () => {\n        setCreate(false);\n        createHandler(searchText);\n    }\n\n    useEffect(() => {\n        setSearchText(getCurrentOptionContent());\n    }, [value]);\n\n    useEffect(() => {\n        setFilteredOptions(filterOptions(searchText));\n    }, [options]);\n\n    return <Select \n        options={filteredOptions}\n        onSearch={handleSearchChange} \n        read={false}\n        inputValue={searchText}\n        onClose={handleClose}\n        create={create}\n        onCreate={handleCreateOption}\n        value={value}\n        {...restProps}\n    />\n}","import React from 'react';\nimport { SearchSelect } from './SearchSelect';\nimport {  } from './Select';\n\nexport const MultiSelect = (props) => {\n    const { options, value, ...restProps } = props;\n\n    const handleInputSizeKeyDown = (e) => {\n        const input = e.target;\n        const parent = input.closest('.select-input');\n        const spanText = document.createElement('span');\n        spanText.textContent = e.target.value;\n        parent.appendChild(spanText);\n        const textWidth = spanText.offsetWidth + 30;\n        input.style.width = Math.max(textWidth, 30) + 'px';\n        spanText.remove();\n    }\n\n    return (\n        <SearchSelect \n            options={options} \n            value={value}\n            onKeyDown={handleInputSizeKeyDown}\n            defaultOptions={options}\n            {...restProps}\n        />\n    );\n}","import React, { useState } from 'react';\nimport { Col, Form } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { selectAllAuthors, selectAllCategories } from '../../redux/tagsSlice';\nimport { ButtonDialog } from './ButtonDialog';\nimport { MultiSelect } from './MultiSelect';\nimport { Select } from './Select';\n\nexport const FilterNotes = (props) => {\n    const { onOrder, onFilter } = props;\n\n    // Redux Selectors\n    const authors = useSelector(selectAllAuthors);\n    const categories = useSelector(selectAllCategories);\n\n    // State\n    const [ orderBy, setOrderBy ] = useState('Alphabetically');\n    const [ orderType, setOrderType ] = useState('Descending');\n    const [ selectedAuthors, setSelectedAuthors ] = useState([]);\n    const [ selectedCategories, setSelectedCategories ] = useState([]);\n    const [ selectedState, setSelectedState ] = useState(String.fromCharCode(160));\n\n    // Helpers\n    const removeNonBreakingSpace = str => str.replace(String.fromCharCode(160), '');\n\n    // Event Handlers\n    const handleOrderByChange = (e) => {\n        setOrderBy(e.target.value);\n        onOrder(e.target.value, orderType);\n    }\n    const handleOrderTypeChange = (e) => {\n        setOrderType(e.target.value);\n        onOrder(orderBy, e.target.value);\n    }\n\n    const handleAuthorsChange = (e) => {\n        const authors = [...selectedAuthors, e.target.value];\n        setSelectedAuthors(authors);\n        onFilter({\n            authors: authors,\n            categories: selectedCategories,\n            order: orderBy,\n            orderType: orderType,\n            state: removeNonBreakingSpace(selectedState)\n        });\n    }\n    const handleAuthorsRemove = (e, value) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const authors = selectedAuthors.filter(author => author !== value);\n        setSelectedAuthors(authors);\n        onFilter({\n            authors: authors,\n            categories: selectedCategories,\n            order: orderBy,\n            orderType: orderType,\n            state: removeNonBreakingSpace(selectedState)\n        });\n    }\n\n    const handleCategoriesChange = (e) => {\n        const categories = [...selectedCategories, e.target.value];\n        setSelectedCategories(categories);\n        onFilter({\n            authors: selectedAuthors,\n            categories: categories,\n            order: orderBy,\n            orderType: orderType,\n            state: removeNonBreakingSpace(selectedState)\n        });\n    }\n    const handleCategoriesRemove = (e, value) => {\n        e.preventDefault();\n        e.stopPropagation();\n        const categories = selectedCategories.filter(author => author !== value);\n        setSelectedCategories(categories);\n        onFilter({\n            authors: selectedAuthors,\n            categories: categories,\n            order: orderBy,\n            orderType: orderType,\n            state: removeNonBreakingSpace(selectedState)\n        });\n    }\n    \n    const handleStateChange = (e) => {\n        const state = e.target.value;\n        setSelectedState(state);\n        onFilter({\n            authors: selectedAuthors,\n            categories: selectedCategories,\n            order: orderBy,\n            orderType: orderType,\n            state: removeNonBreakingSpace(state)\n        });\n    }\n\n    return (\n        <ButtonDialog \n            className=\"btn btn-outline-primary\"\n            btnText=\"Filter\"\n            containerClassName=\"filterNotes\"\n        >\n            <Form>\n                <Form.Row>\n                    <Col xs=\"12\">\n                        <h3>Sort</h3>\n                    </Col>\n                    <Col className=\"d-flex flex-wrap justify-content-between\">\n                        <Select onChange={handleOrderByChange} options={[\n                            {\n                                content: \"Created\",\n                            },\n                            {\n                                content: \"Alphabetically\",\n                            },\n                        ]} value={orderBy} />\n                        <Select onChange={handleOrderTypeChange} options={[\n                            {\n                                content: \"Ascending\",\n                            },\n                            {\n                                content: \"Descending\",\n                            },\n                        ]} value={orderType} />\n                    </Col>\n                </Form.Row>\n                <Form.Row>\n                    <Col xs=\"12\">\n                        <h3>Filter</h3>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Form.Group controlId=\"filterAuthor\" className=\"filter-select\">\n                            <Form.Label>Author</Form.Label>\n                            <MultiSelect \n                                options={authors} \n                                value={selectedAuthors} \n                                onChange={handleAuthorsChange}\n                                onRemoveTag={handleAuthorsRemove}\n                            />\n                        </Form.Group>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Form.Group controlId=\"filterCategory\" className=\"filter-select\">\n                            <Form.Label>Category</Form.Label>\n                            <MultiSelect \n                                options={categories} \n                                value={selectedCategories} \n                                onChange={handleCategoriesChange}\n                                onRemoveTag={handleCategoriesRemove}\n                            />\n                        </Form.Group>\n                    </Col>\n                    <Col xs=\"12\">\n                        <Form.Group controlId=\"filterState\">\n                            <Form.Label>State</Form.Label>\n                            <Select \n                                options={[\n                                    {content: String.fromCharCode('160')},\n                                    {content: 'Read'},\n                                    {content: 'Reading'},\n                                    {content: 'To Read'},\n                                ]} \n                                value={selectedState} \n                                onChange={handleStateChange}\n                            />\n                        </Form.Group>\n                    </Col>\n                </Form.Row>\n            </Form>\n        </ButtonDialog>\n    );\n}","import React, { useState } from 'react';\nimport { Modal, Button, Form, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { noteAdded } from '../../redux/notesSlice';\nimport { selectAllAuthors, selectAllCategories, authorAdded, categoryAdded } from '../../redux/tagsSlice';\nimport { SearchSelect } from '../inputs/SearchSelect';\nimport { Select } from '../inputs/Select';\n\nexport const AddNoteForm = (props) => {\n    const [ show, setShow ] = useState(true);\n    const { callbackClose } = props;\n\n    const dispatch = useDispatch();\n\n    // Redux Selectors\n    const authors = useSelector(selectAllAuthors);\n    const categories = useSelector(selectAllCategories);\n\n    // Form state\n    const [ name, setName ] = useState('');\n    const [ author, setAuthor ] = useState('');\n    const [ category, setCategory ] = useState('');\n    const [ state, setState ] = useState('');\n\n    // Form handle state change\n    const handleNameChange = e => setName(e.target.value);\n    const handleAuthorChange = e => setAuthor(e.target.value);\n    const handleCategoryChange = e => setCategory(e.target.value);\n    const handleStateChange = e => setState(e.target.value);\n\n    // Create note handle\n    const canSave = name.trim() && author && category && state;\n\n    const handleCreateNote = () => {\n        if (canSave) {\n            dispatch(noteAdded(\n                name,\n                author,\n                category,\n                state\n            ));\n\n            setShow(false);\n        }\n    };\n\n    // Close handle\n    const handleClose = () => setShow(false);\n\n    // Redux handlers\n    const createAuthorTag = (content) => dispatch(authorAdded(content));\n    const createCategoryTag = (content) => dispatch(categoryAdded(content));\n\n    return (\n        <Modal \n            size=\"lg\" \n            show={show} \n            onHide={handleClose} \n            onExited={callbackClose}\n            dialogClassName=\"bg-light\"\n            className=\"addNoteForm\"\n        >\n            <Modal.Header>\n                <Modal.Title>Add a new book notes</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Form.Row>\n                        <Col>\n                            <Form.Group controlId=\"addNoteFormName\">\n                                <Form.Label>Book Name</Form.Label>\n                                <Form.Control type=\"text\" onChange={handleNameChange}></Form.Control>\n                            </Form.Group>\n                        </Col>\n                    </Form.Row>\n                    <Form.Row>\n                        <Col className=\"d-flex flex-wrap\">\n                            <Form.Group controlId=\"addNoteFormAuthor\">\n                                <Form.Label>Author</Form.Label>\n                                <SearchSelect \n                                    options={[\n                                        {content: ''},\n                                        ...authors\n                                    ]} \n                                    onChange={handleAuthorChange}\n                                    value={author}\n                                    createHandler={createAuthorTag}\n                                />\n                            </Form.Group>\n                            <Form.Group controlId=\"addNoteFormCategory\">\n                                <Form.Label>Category</Form.Label>\n                                <SearchSelect \n                                    options={[\n                                        {content: ''},\n                                        ...categories\n                                    ]} \n                                    onChange={handleCategoryChange}\n                                    value={category}\n                                    createHandler={createCategoryTag}\n                                />\n                            </Form.Group>\n                        </Col>\n                    </Form.Row>\n                    <Form.Row>\n                        <Col>\n                            <Form.Group controlId=\"addNoteFormState\">\n                                <Form.Label>State</Form.Label>\n                                <Select \n                                    options={[\n                                        {content: ''},\n                                        {content: 'Read'},\n                                        {content: 'Reading'},\n                                        {content: 'To Read'},\n                                    ]}\n                                    value={state}\n                                    onChange={handleStateChange}\n                                />\n                            </Form.Group>\n                        </Col>\n                    </Form.Row>\n                </Form>\n            </Modal.Body>\n            <Modal.Footer className=\"justify-content-start\">\n                <Button variant=\"primary\" onClick={handleCreateNote}>\n                    Create Note\n                </Button>\n                <Button variant=\"outline-primary\" onClick={handleClose}>\n                    Cancel\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};","import React, { useState } from 'react';\r\nimport { Container, Row, Button, Col } from 'react-bootstrap';\r\nimport { FilterNotes } from './inputs/FilterNotes';\r\nimport { AddNoteForm } from './notes/AddNoteForm';\r\n\r\nexport const Toolbar = (props) => {\r\n    const { onOrder, onFilter } = props;\r\n\r\n    const [ openForm, setOpenForm ] = useState(false);\r\n\r\n    const handleClosedCreateForm = () => setOpenForm(false);\r\n    const handleCreateForm = () => setOpenForm(true);\r\n\r\n    return (\r\n        <div className=\"toolbar\">\r\n            <Container>\r\n                <Row>\r\n                    <Col className=\"d-flex\">\r\n                        <Button className=\"mr-auto\" onClick={handleCreateForm}>Create Note</Button>\r\n                        <FilterNotes onOrder={onOrder} onFilter={onFilter} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            {openForm && <AddNoteForm callbackClose={handleClosedCreateForm} />}\r\n        </div>\r\n    );\r\n};","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Navbar } from '../components/Navbar';\r\nimport { NotesList } from '../components/notes/NotesList';\r\nimport { Toolbar } from '../components/Toolbar';\r\n\r\nexport const Home = () => {\r\n    // Redux Selectors\r\n    const notesDefault = useSelector(status => status.notes);\r\n\r\n    // React State\r\n    const [ notes, setNotes ] = useState(notesDefault);\r\n    const [ currentFilter, setCurrentFilter ] = useState({\r\n        authors: [],\r\n        categories: [],\r\n        order: 'Alphabetically',\r\n        orderType: 'Descending',\r\n        state: ''\r\n    });\r\n\r\n    // Refs\r\n    const firstRender = useRef(true);\r\n\r\n    // Helper functions\r\n    const orderBy = {\r\n        \"alphabetically\": (unorderedArr, type) => {\r\n            if (type === 'ascending') {\r\n                return [...unorderedArr].sort((a, b) => {\r\n                    const aName = a.name.toLowerCase();\r\n                    const bName = b.name.toLowerCase();\r\n    \r\n                    if (aName[0] > bName[0]) {\r\n                        return 1;\r\n                    } else if (aName[0] < bName[0]) {\r\n                        return -1;\r\n                    }\r\n    \r\n                    return 0;\r\n                });\r\n            } else if (type === 'descending') {\r\n                return [...unorderedArr].sort((a, b) => {\r\n                    const aName = a.name.toLowerCase();\r\n                    const bName = b.name.toLowerCase();\r\n\r\n                    if (aName[0] < bName[0]) {\r\n                        return 1;\r\n                    } else if (aName[0] > bName[0]) {\r\n                        return -1;\r\n                    }\r\n    \r\n                    return 0;\r\n                });\r\n            }\r\n        },\r\n        \"created\": (unorderedArr, type) => {\r\n            if (type === 'ascending') {\r\n                return [...unorderedArr].sort((a, b) => {\r\n                    if (a.created > b.created) {\r\n                        return 1;\r\n                    } else if (a.created < b.created) {\r\n                        return -1;\r\n                    }\r\n\r\n                    return 0;\r\n                });\r\n            }\r\n            if (type === 'descending') {\r\n                return [...unorderedArr].sort((a, b) => {\r\n                    if (a.created < b.created) {\r\n                        return 1;\r\n                    } else if (a.created > b.created) {\r\n                        return -1;\r\n                    }\r\n\r\n                    return 0;\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const findItem = (arr, value) => \r\n        arr.findIndex(item => item === value) > -1;\r\n\r\n    const findState = (state, noteState) => state === noteState;\r\n\r\n    // Event Handlers\r\n    const handleSearchNotes = (e) => {\r\n        if (e.target.value.length === 0) {\r\n            handleFilter(currentFilter);\r\n            return;\r\n        }\r\n\r\n        setNotes(notesDefault.filter(\r\n            note => note.name.startsWith(e.target.value)));\r\n    }\r\n    const handleOrderByNotes = (order, type) => {\r\n        setNotes(orderBy[order.toLowerCase()](notes, type.toLowerCase()));\r\n    }\r\n    const handleFilter = (options) => {\r\n        const { authors, categories, order, orderType, state } = options;\r\n\r\n        if (!Object.is(options, currentFilter)) {\r\n            setCurrentFilter(options);\r\n        }\r\n    \r\n        let filteredNotes = [];\r\n        if (authors.length > 0 && categories.length > 0 && state) {\r\n            filteredNotes = notesDefault.filter(note => {\r\n                return findItem(authors, note.author) &&\r\n                    findItem(categories, note.category) &&\r\n                    findState(state, note.state);\r\n            });\r\n        } else if (authors.length > 0 && categories.length > 0) {\r\n            filteredNotes = notesDefault.filter(note => {\r\n                return findItem(authors, note.author) &&\r\n                    findItem(categories, note.category);\r\n            });\r\n        } else if (authors.length > 0 && state) {\r\n            filteredNotes = notesDefault.filter(note => {\r\n                return findItem(authors, note.author) &&\r\n                    findState(state, note.state);\r\n            });\r\n        } else if (categories.length > 0 && state) {\r\n            filteredNotes = notesDefault.filter(note => {\r\n                return findItem(categories, note.category) &&\r\n                    findState(state, note.state);\r\n            });\r\n        } else if (authors.length > 0) {\r\n            filteredNotes = notesDefault.filter(note => findItem(authors, note.author));\r\n        } else if (categories.length > 0) {\r\n            filteredNotes = notesDefault.filter(note => findItem(categories, note.category));\r\n        } else if (state) {\r\n            filteredNotes = notesDefault.filter(note => findState(state, note.state));\r\n        } else {\r\n            filteredNotes = notesDefault;\r\n        }\r\n\r\n        setNotes(orderBy[order.toLowerCase()](filteredNotes, orderType.toLowerCase()));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (firstRender.current) {\r\n            setNotes(orderBy['alphabetically'](notesDefault, 'descending'));\r\n            firstRender.current = false;\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        handleFilter(currentFilter);\r\n    }, [notesDefault])\r\n\r\n    return (\r\n        <div id=\"homepage\" ref={firstRender}>\r\n            <Navbar onSearch={handleSearchNotes} />\r\n            <Toolbar onOrder={handleOrderByNotes} onFilter={handleFilter} />\r\n            <NotesList notesDefault={notesDefault} notes={notes} />\r\n        </div>\r\n    );\r\n}","// Import TinyMCE\nimport 'tinymce';\n\n// Default icons are required for TinyMCE 5.3 or above\nimport 'tinymce/icons/default';\n\n// A theme is also required\nimport 'tinymce/themes/silver';\n\n// Any plugins you want to use has to be imported\nimport 'tinymce/plugins/advlist';\nimport 'tinymce/plugins/autolink';\nimport 'tinymce/plugins/lists';\nimport 'tinymce/plugins/link';\nimport 'tinymce/plugins/image';\nimport 'tinymce/plugins/charmap';\nimport 'tinymce/plugins/print';\nimport 'tinymce/plugins/preview';\nimport 'tinymce/plugins/anchor';\nimport 'tinymce/plugins/searchreplace';\nimport 'tinymce/plugins/visualblocks';\nimport 'tinymce/plugins/code';\nimport 'tinymce/plugins/fullscreen';\nimport 'tinymce/plugins/insertdatetime';\nimport 'tinymce/plugins/media';\nimport 'tinymce/plugins/table';\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/code';\nimport 'tinymce/plugins/help';\nimport 'tinymce/plugins/wordcount';\n\n// CSS\nimport \"tinymce/skins/ui/oxide/skin.min.css\";\n\nimport { Editor } from '@tinymce/tinymce-react';\n\nexport const TinyMceWrapper = (props) => {\n    return (\n        <Editor\n            {...props}\n            textareaName=\"singleNoteNotes\"\n            init={{\n                height: 600,\n                menubar: false,\n                plugins: [\n                'advlist autolink lists link image charmap print preview anchor',\n                'searchreplace visualblocks code fullscreen',\n                'insertdatetime media table paste code help wordcount'\n                ],\n                toolbar: 'undo redo | formatselect | ' +\n                'bold italic backcolor | alignleft aligncenter ' +\n                'alignright alignjustify | bullist numlist outdent indent | ' +\n                'removeformat | help',\n                content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:16px; }'\n            }}\n        />\n    );\n}","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { saveAs } from 'file-saver';\nimport { exportHtmlStyles } from '../../variables/exportHtmlStyles';\n\nexport const ExportToHTML = ({ notes, name }) => {\n    const headTag = `\n        <head>\n            <link href=\"https://fonts.googleapis.com/css2?family=Roboto+Condensed:wght@400;700&display=swap\" rel=\"stylesheet\">\n            <style>\n                ${exportHtmlStyles}\n            </style>\n        </head>\n    `;\n    const bodyTag = `\n        <body>\n            <div class=\"container\">\n                ${notes}\n            </div>\n        </body>\n    `\n\n    // Export Handlers\n    const exportToHtml = () => {\n        const blob = new Blob([headTag, bodyTag], {type: 'text/html'});\n        const formatedName = name.replace(' ', '_') + '.html';\n        \n        saveAs(blob, formatedName);\n    }\n\n    return (\n        <Button onClick={exportToHtml} variant=\"link\">\n            Export in HTML\n        </Button>\n    );\n}","export const exportHtmlStyles = `\n    body {\n        background: #fff7f3;\n        font-family: 'Roboto Condensed', sans-serif;\n        color: #445554;\n        font-size: 1.25rem;\n    }\n\n    h1, h2, h3, h4, h5, h6 {\n        color: #223A38;\n        margin-top: 30px;\n        margin-bottom: 15px;\n    }\n\n    p {\n        margin-top: 0;\n        margin-bottom: 20px;\n    }\n\n    a {\n        color: #445554;\n        text-decoration: underline;\n    }\n\n    a:hover {\n        color: #223A38;\n    }\n\n    body > .container {\n        max-width: 700px;\n        margin: 0 auto;\n        padding: 0 15px;\n    }\n`;","import React, { useState } from 'react';\r\nimport { Button, Col, Container, Form } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { noteUpdated, selectNoteById, noteDeleted } from '../../redux/notesSlice';\r\nimport { authorAdded, categoryAdded, selectAllAuthors, selectAllCategories } from '../../redux/tagsSlice';\r\nimport { SearchSelect } from '../inputs/SearchSelect';\r\nimport { Select } from '../inputs/Select';\r\nimport { TinyMceWrapper } from '../TinyMCE';\r\nimport { ExportToHTML } from '../buttons/ExportToHTML';\r\n\r\nexport const SingleNote = () => {\r\n    // React Router Dom\r\n    const { bookId } = useParams();\r\n    const history = useHistory();\r\n\r\n    // Redux\r\n    const dispatch = useDispatch();\r\n\r\n    // Redux selectors\r\n    const note = useSelector(state => selectNoteById(state, bookId));\r\n    const authors = useSelector(selectAllAuthors);\r\n    const categories = useSelector(selectAllCategories);\r\n\r\n    // Form state\r\n    const [ name, setName ] = useState(note.name);\r\n    const [ author, setAuthor ] = useState(note.author);\r\n    const [ category, setCategory ] = useState(note.category);\r\n    const [ state, setState ] = useState(note.state);\r\n    const [ notes, setNotes ] = useState(note.notes);\r\n\r\n    // Form handle state change\r\n    const handleNameChange = e => {\r\n        setName(e.target.value);\r\n        dispatch(noteUpdated({\r\n            id: bookId,\r\n            changes: {name: e.target.value}\r\n        }));\r\n    };\r\n    const handleAuthorChange = e => {\r\n        setAuthor(e.target.value)\r\n        dispatch(noteUpdated({\r\n            id: bookId,\r\n            changes: {author: e.target.value}\r\n        }));\r\n    };\r\n    const handleCategoryChange = e => {\r\n        setCategory(e.target.value);\r\n        dispatch(noteUpdated({\r\n            id: bookId,\r\n            changes: {category: e.target.value}\r\n        }));\r\n    };\r\n    const handleStateChange = e => {\r\n        setState(e.target.value);\r\n        dispatch(noteUpdated({\r\n            id: bookId,\r\n            changes: {state: e.target.value}\r\n        }));\r\n    };\r\n    const handleNotesChange = content => {\r\n        setNotes(content);\r\n        dispatch(noteUpdated({\r\n            id: bookId,\r\n            changes: {notes: content}\r\n        }));\r\n    };\r\n    const handleRemoveClick = () => {\r\n        dispatch(noteDeleted(bookId));\r\n        history.push('/');\r\n    };\r\n\r\n    // Redux handlers\r\n    const createAuthorTag = (content) => dispatch(authorAdded(content));\r\n    const createCategoryTag = (content) => dispatch(categoryAdded(content));\r\n\r\n    return (\r\n        <div className=\"singleNote\">\r\n            <Container>\r\n                <div className=\"singleNote-toolbar d-flex flex-wrap justify-content-between align-items-center\">\r\n                    <Link to=\"/\" className=\"back\"><i className=\"fas fa-arrow-left\"></i>Back</Link>\r\n                    <div class=\"d-flex\">\r\n                        <ExportToHTML notes={notes} name={name} />\r\n                    </div>\r\n                </div>\r\n                <Form>\r\n                    <Form.Row className=\"singleNote-header\">\r\n                        <Col className=\"d-flex justify-content-between\">\r\n                            <Form.Control \r\n                                className=\"singleNote-name\" \r\n                                type=\"text\" \r\n                                onChange={handleNameChange} \r\n                                value={name}\r\n                            ></Form.Control>\r\n                            <Button \r\n                                variant=\"link\" \r\n                                className=\"note-action\"\r\n                                onClick={handleRemoveClick}\r\n                            >\r\n                                <i className=\"fas fa-trash\"></i>\r\n                            </Button>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row className=\"singleNote-options\">\r\n                        <Col className=\"d-flex flex-wrap\">\r\n                            <Form.Group controlId=\"addNoteFormAuthor\">\r\n                                <Form.Label>Author</Form.Label>\r\n                                <SearchSelect \r\n                                    onChange={handleAuthorChange}\r\n                                    value={author}\r\n                                    options={authors}\r\n                                    createHandler={createAuthorTag}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"addNoteFormCategory\">\r\n                                <Form.Label>Category</Form.Label>\r\n                                <SearchSelect \r\n                                    onChange={handleCategoryChange}\r\n                                    value={category}\r\n                                    options={categories}\r\n                                    createHandler={createCategoryTag}\r\n                                />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"singleNote-state\" controlId=\"addNoteFormState\">\r\n                                <Form.Label>State</Form.Label>\r\n                                <Select onChange={handleStateChange} value={state} options={[\r\n                                    {content: 'Read'},\r\n                                    {content: 'Reading'},\r\n                                    {content: 'To Read'},\r\n                                ]} />\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        <Col>\r\n                            <TinyMceWrapper value={notes} onEditorChange={handleNotesChange} />\r\n                        </Col>\r\n                    </Form.Row>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { Navbar } from '../components/Navbar';\r\nimport { SingleNote } from '../components/notes/SingleNote';\r\n\r\nexport const Book = () => {\r\n    return (\r\n        <div id=\"bookpage\">\r\n            <Navbar />\r\n            <SingleNote />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { Home } from './pages/Home';\r\nimport { Book } from './pages/Book';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/book/:bookId\">\r\n            <Book />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\nimport notesReducer from '../redux/notesSlice';\nimport tagsReducer from '../redux/tagsSlice';\n\nexport default configureStore({\n  reducer: {\n    notes: notesReducer,\n    tags: tagsReducer\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { saveData } from './app/localStorage';\r\n\r\nstore.subscribe(() => {\r\n  saveData('boonote.notes', store.getState().notes);\r\n  saveData('boonote.tags', store.getState().tags);\r\n})\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}